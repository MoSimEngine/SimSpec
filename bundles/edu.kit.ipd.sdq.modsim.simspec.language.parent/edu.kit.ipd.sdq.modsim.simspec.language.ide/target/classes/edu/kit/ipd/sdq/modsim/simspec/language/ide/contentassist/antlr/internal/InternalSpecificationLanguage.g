/*
 * generated by Xtext 2.17.0
 */
grammar InternalSpecificationLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.kit.ipd.sdq.modsim.simspec.language.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.kit.ipd.sdq.modsim.simspec.language.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.kit.ipd.sdq.modsim.simspec.language.services.SpecificationLanguageGrammarAccess;

}
@parser::members {
	private SpecificationLanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(SpecificationLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSimulator
entryRuleSimulator
:
{ before(grammarAccess.getSimulatorRule()); }
	 ruleSimulator
{ after(grammarAccess.getSimulatorRule()); } 
	 EOF 
;

// Rule Simulator
ruleSimulator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimulatorAccess().getGroup()); }
		(rule__Simulator__Group__0)
		{ after(grammarAccess.getSimulatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getAlternatives()); }
		(rule__Event__Alternatives)
		{ after(grammarAccess.getEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGEvent
entryRuleGEvent
:
{ before(grammarAccess.getGEventRule()); }
	 ruleGEvent
{ after(grammarAccess.getGEventRule()); } 
	 EOF 
;

// Rule GEvent
ruleGEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGEventAccess().getGroup()); }
		(rule__GEvent__Group__0)
		{ after(grammarAccess.getGEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PrimitiveType
rulePrimitiveType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
		(rule__PrimitiveType__Alternatives)
		{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimulatorAccess().getEventsAssignment_1_0()); }
		(rule__Simulator__EventsAssignment_1_0)
		{ after(grammarAccess.getSimulatorAccess().getEventsAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimulatorAccess().getEntitiesAssignment_1_1()); }
		(rule__Simulator__EntitiesAssignment_1_1)
		{ after(grammarAccess.getSimulatorAccess().getEntitiesAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getGroup_0()); }
		(rule__Event__Group_0__0)
		{ after(grammarAccess.getEventAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventAccess().getGEventParserRuleCall_1()); }
		ruleGEvent
		{ after(grammarAccess.getEventAccess().getGEventParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getINTEnumLiteralDeclaration_0()); }
		('INT')
		{ after(grammarAccess.getPrimitiveTypeAccess().getINTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getDOUBLEEnumLiteralDeclaration_1()); }
		('DOUBLE')
		{ after(grammarAccess.getPrimitiveTypeAccess().getDOUBLEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getBOOLEnumLiteralDeclaration_2()); }
		('BOOL')
		{ after(grammarAccess.getPrimitiveTypeAccess().getBOOLEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__Group__0__Impl
	rule__Simulator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimulatorAccess().getUnorderedGroup_0()); }
	(rule__Simulator__UnorderedGroup_0)
	{ after(grammarAccess.getSimulatorAccess().getUnorderedGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimulatorAccess().getAlternatives_1()); }
	(rule__Simulator__Alternatives_1)*
	{ after(grammarAccess.getSimulatorAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simulator__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__Group_0_0__0__Impl
	rule__Simulator__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimulatorAccess().getNameKeyword_0_0_0()); }
	'name'
	{ after(grammarAccess.getSimulatorAccess().getNameKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__Group_0_0__1__Impl
	rule__Simulator__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimulatorAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getSimulatorAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimulatorAccess().getNameAssignment_0_0_2()); }
	(rule__Simulator__NameAssignment_0_0_2)
	{ after(grammarAccess.getSimulatorAccess().getNameAssignment_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simulator__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__Group_0_1__0__Impl
	rule__Simulator__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimulatorAccess().getDescriptionKeyword_0_1_0()); }
	'description'
	{ after(grammarAccess.getSimulatorAccess().getDescriptionKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__Group_0_1__1__Impl
	rule__Simulator__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimulatorAccess().getEqualsSignKeyword_0_1_1()); }
	'='
	{ after(grammarAccess.getSimulatorAccess().getEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimulatorAccess().getDescriptionAssignment_0_1_2()); }
	(rule__Simulator__DescriptionAssignment_0_1_2)
	{ after(grammarAccess.getSimulatorAccess().getDescriptionAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0__0__Impl
	rule__Event__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getEventKeyword_0_0()); }
	'event'
	{ after(grammarAccess.getEventAccess().getEventKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0__1__Impl
	rule__Event__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getNameAssignment_0_1()); }
	(rule__Event__NameAssignment_0_1)
	{ after(grammarAccess.getEventAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_0_2()); }
	(rule__Event__Group_0_2__0)?
	{ after(grammarAccess.getEventAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0_2__0__Impl
	rule__Event__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_0_2_0()); }
	'{'
	{ after(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0_2__1__Impl
	rule__Event__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_0_2_1()); }
	(rule__Event__Group_0_2_1__0)?
	{ after(grammarAccess.getEventAccess().getGroup_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_0_2_2()); }
	'}'
	{ after(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0_2_1__0__Impl
	rule__Event__Group_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getReadsKeyword_0_2_1_0()); }
	'reads'
	{ after(grammarAccess.getEventAccess().getReadsKeyword_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0_2_1__1__Impl
	rule__Event__Group_0_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getReadAttributesAssignment_0_2_1_1()); }
	(rule__Event__ReadAttributesAssignment_0_2_1_1)
	{ after(grammarAccess.getEventAccess().getReadAttributesAssignment_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getGroup_0_2_1_2()); }
	(rule__Event__Group_0_2_1_2__0)*
	{ after(grammarAccess.getEventAccess().getGroup_0_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group_0_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0_2_1_2__0__Impl
	rule__Event__Group_0_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getCommaKeyword_0_2_1_2_0()); }
	','
	{ after(grammarAccess.getEventAccess().getCommaKeyword_0_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Event__Group_0_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group_0_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventAccess().getReadAttributesAssignment_0_2_1_2_1()); }
	(rule__Event__ReadAttributesAssignment_0_2_1_2_1)
	{ after(grammarAccess.getEventAccess().getReadAttributesAssignment_0_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
	rule__Entity__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getAttributesAssignment_2_1()); }
	(rule__Entity__AttributesAssignment_2_1)*
	{ after(grammarAccess.getEntityAccess().getAttributesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_2_2()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
	(rule__Attribute__TypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getBaseDataTypeAction_0()); }
	()
	{ after(grammarAccess.getTypeAccess().getBaseDataTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_1()); }
	(rule__Type__PrimitiveTypeAssignment_1)
	{ after(grammarAccess.getTypeAccess().getPrimitiveTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GEvent__Group__0__Impl
	rule__GEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGEventAccess().getBlablablaKeyword_0()); }
	'blablabla'
	{ after(grammarAccess.getGEventAccess().getBlablablaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGEventAccess().getEndEventAssignment_1()); }
	(rule__GEvent__EndEventAssignment_1)
	{ after(grammarAccess.getGEventAccess().getEndEventAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simulator__UnorderedGroup_0
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getSimulatorAccess().getUnorderedGroup_0());
	}
:
	rule__Simulator__UnorderedGroup_0__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getSimulatorAccess().getUnorderedGroup_0())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getSimulatorAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__Simulator__UnorderedGroup_0__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSimulatorAccess().getUnorderedGroup_0(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSimulatorAccess().getUnorderedGroup_0(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getSimulatorAccess().getGroup_0_0()); }
					(rule__Simulator__Group_0_0__0)
					{ after(grammarAccess.getSimulatorAccess().getGroup_0_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getSimulatorAccess().getUnorderedGroup_0(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getSimulatorAccess().getUnorderedGroup_0(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getSimulatorAccess().getGroup_0_1()); }
					(rule__Simulator__Group_0_1__0)
					{ after(grammarAccess.getSimulatorAccess().getGroup_0_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimulatorAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__Simulator__UnorderedGroup_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__UnorderedGroup_0__Impl
	rule__Simulator__UnorderedGroup_0__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__UnorderedGroup_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simulator__UnorderedGroup_0__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Simulator__NameAssignment_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimulatorAccess().getNameSTRINGTerminalRuleCall_0_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSimulatorAccess().getNameSTRINGTerminalRuleCall_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__DescriptionAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimulatorAccess().getDescriptionSTRINGTerminalRuleCall_0_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSimulatorAccess().getDescriptionSTRINGTerminalRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__EventsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimulatorAccess().getEventsEventParserRuleCall_1_0_0()); }
		ruleEvent
		{ after(grammarAccess.getSimulatorAccess().getEventsEventParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simulator__EntitiesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimulatorAccess().getEntitiesEntityParserRuleCall_1_1_0()); }
		ruleEntity
		{ after(grammarAccess.getSimulatorAccess().getEntitiesEntityParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ReadAttributesAssignment_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getReadAttributesAttributeCrossReference_0_2_1_1_0()); }
		(
			{ before(grammarAccess.getEventAccess().getReadAttributesAttributeIDTerminalRuleCall_0_2_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEventAccess().getReadAttributesAttributeIDTerminalRuleCall_0_2_1_1_0_1()); }
		)
		{ after(grammarAccess.getEventAccess().getReadAttributesAttributeCrossReference_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__ReadAttributesAssignment_0_2_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getReadAttributesAttributeCrossReference_0_2_1_2_1_0()); }
		(
			{ before(grammarAccess.getEventAccess().getReadAttributesAttributeIDTerminalRuleCall_0_2_1_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEventAccess().getReadAttributesAttributeIDTerminalRuleCall_0_2_1_2_1_0_1()); }
		)
		{ after(grammarAccess.getEventAccess().getReadAttributesAttributeCrossReference_0_2_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimitiveTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_1_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getTypeAccess().getPrimitiveTypePrimitiveTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GEvent__EndEventAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGEventAccess().getEndEventEventCrossReference_1_0()); }
		(
			{ before(grammarAccess.getGEventAccess().getEndEventEventIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGEventAccess().getEndEventEventIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getGEventAccess().getEndEventEventCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
