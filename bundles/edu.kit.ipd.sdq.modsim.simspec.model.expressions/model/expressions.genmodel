<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" modelDirectory="/edu.kit.ipd.sdq.modsim.simspec.model.expressions/src-gen"
    editDirectory="/edu.kit.ipd.sdq.modsim.simspec.model.expressions.edit/src-gen"
    editorDirectory="/edu.kit.ipd.sdq.modsim.simspec.model.expressions.editor/src-gen"
    modelPluginID="edu.kit.ipd.sdq.modsim.simspec.model.expressions" modelName="Expressions"
    rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container" testsDirectory=""
    testSuiteClass="" importerID="org.eclipse.emf.importer.ecore" complianceLevel="8.0"
    copyrightFields="false" usedGenPackages="../../edu.kit.ipd.sdq.modsim.simspec.model.behavior/model/behavior.genmodel#//behavior ../../edu.kit.ipd.sdq.modsim.simspec.model.datatypes/model/datatypes.genmodel#//datatypes ../../edu.kit.ipd.sdq.modsim.simspec.model.general/model/general.genmodel#//general ../../edu.kit.ipd.sdq.modsim.simspec.model.structure/model/structure.genmodel#//structure"
    operationReflection="true" importOrganizing="true">
  <foreignModel>expressions.ecore</foreignModel>
  <genPackages prefix="Expressions" basePackage="edu.kit.ipd.sdq.modsim.simspec.model"
      disposableProviderFactory="true" ecorePackage="expressions.ecore#/">
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="expressions.ecore#//Operator">
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Operator/PLUS"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Operator/MINUS"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Operator/MULT"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Operator/DIV"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Operator/MOD"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Operator/AND"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Operator/OR"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="expressions.ecore#//UnaryOperator">
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//UnaryOperator/MINUS"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//UnaryOperator/NEGATION"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//UnaryOperator/TYPE_CAST"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="expressions.ecore#//Comparator">
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Comparator/EQUAL"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Comparator/LESS_THAN"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Comparator/LESS_THAN_EQUAL"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Comparator/GREATER_THAN"/>
      <genEnumLiterals ecoreEnumLiteral="expressions.ecore#//Comparator/GREATER_THAN_EQUAL"/>
    </genEnums>
    <genClasses ecoreClass="expressions.ecore#//Variable">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference expressions.ecore#//Variable/attribute"/>
    </genClasses>
    <genClasses ecoreClass="expressions.ecore#//Constant">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute expressions.ecore#//Constant/value"/>
    </genClasses>
    <genClasses ecoreClass="expressions.ecore#//BinaryOperation">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference expressions.ecore#//BinaryOperation/left"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute expressions.ecore#//BinaryOperation/operator"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference expressions.ecore#//BinaryOperation/right"/>
    </genClasses>
    <genClasses ecoreClass="expressions.ecore#//UnaryOperation">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference expressions.ecore#//UnaryOperation/operand"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute expressions.ecore#//UnaryOperation/operator"/>
    </genClasses>
    <genClasses ecoreClass="expressions.ecore#//Comparison">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference expressions.ecore#//Comparison/left"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute expressions.ecore#//Comparison/comparator"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference expressions.ecore#//Comparison/right"/>
    </genClasses>
    <genClasses ecoreClass="expressions.ecore#//IfThenElse">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference expressions.ecore#//IfThenElse/condition"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference expressions.ecore#//IfThenElse/thenBranch"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference expressions.ecore#//IfThenElse/elseBranch"/>
    </genClasses>
  </genPackages>
</genmodel:GenModel>
